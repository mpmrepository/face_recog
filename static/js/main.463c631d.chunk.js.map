{"version":3,"sources":["components/logo/logo.svg","components/navigation/Navigation.js","components/imageLinkForm/ImageLinkForm.js","components/faceRecognition/FaceRecognition.js","components/signin/Signin.js","components/register/Register.js","components/logo/Logo.js","components/rank/Rank.js","components/particlesOptions/ParticlesOptions.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navigation","onRouteChange","isSignedIn","className","style","display","justifyContent","onClick","ImageLinkForm","onInputChange","onButtonSubmit","type","onChange","borderLeft","FaceRecognition","imageUrl","box","maxWidth","id","alt","src","top","topRow","bottom","bottomRow","left","leftCol","right","rightCol","Signin","htmlFor","name","value","href","Register","Logo","options","max","height","width","skull","Rank","ParticlesOptions","particles","number","density","enable","value_area","opacity","random","anim","color","size","line_linked","clarifyApp","Clarifai","App","apiKey","calculateFaceLocation","data","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","Number","left_col","top_row","right_col","bottom_row","displayFaceBox","setState","e","input","target","state","models","predict","FACE_DETECT_MODEL","url","then","response","catch","err","console","log","route","fetch","json","this","params","Component","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.463c631d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.504f8137.svg\";","import React from 'react'\n\nconst Navigation = ({ onRouteChange, isSignedIn }) => {\n    if (isSignedIn) {\n      return (\n      <nav className=\"ma4\" style={{ display: 'flex', justifyContent: 'flex-end' }}>\n        <p \n          onClick={() => onRouteChange('signout')} \n          className=\"f4 fw5  link dim black underline  pointer\">Sign out</p>\n      </nav> \n      );\n    } else {\n      return (\n        <nav className=\"ma4\" style={{ display: 'flex', justifyContent: 'flex-end' }}>\n        <p onClick={() => onRouteChange('signin')} className=\"f4 fw5 link dim black underline  pointer\">Sign in</p>\n          <p onClick={() => onRouteChange('Register')} className=\"f4 fw5 ml3 link dim black underline  pointer\">Register</p>\n        </nav> \n      );\n    }\n}\n\nexport default Navigation;","import React from 'react'\nimport './ImageLinkForm.css'\n\nconst ImageLinkForm = ( { onInputChange, onButtonSubmit }) => {\n  return (\n    <div>\n      <p className=\"f3\"> \n        { 'This detects faces. Give it  try' }\n      </p>\n      <div className=\"center\">\n        <div className=\"pa4 form center\">\n          <input className=\"f4 pa2 w-70 bw1 ba center \" type=\"text\" onChange={ onInputChange }/>\n          <button \n            onClick={ onButtonSubmit } \n            className=\"w-30 b--black ba bw1 f4 link ph3 pv2 dib bg-white\" \n            style={{ borderLeft: 'none' }}>\n              Detect\n            </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ImageLinkForm;","import React from 'react';\nimport './FaceRecognition.css';\n\nconst FaceRecognition = ({ imageUrl, box }) => {\n  return (\n    <div className=\"image-container center ma2 \" style={{ maxWidth: '500px'}}> \n      <img id=\"inputimage\" alt=\"\" src={ imageUrl } />\n      <div className=\"bounding-box\" \n        style={{ \n          top: box.topRow , \n          bottom: box.bottomRow , \n          left: box.leftCol , \n          right: box.rightCol , \n        }} ></div>\n    </div>\n  );\n}\nexport default FaceRecognition;","import React from 'react'\n\nconst Signin = ({ onRouteChange }) => {\n  return (\n    <div>\n      <article className=\"br0 ba bw1 dark-gray b--black bg-white mv4 w-100 w-50-m w-25-l mw5 center\">\n        <main className=\"pa4 black-80\">\n          <div className=\"measure center\">\n            <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\n              <legend className=\"f4 fw6 ph0 mh0\">SIGN IN</legend>\n              <div className=\"mt3\">\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\n                <input className=\"bw1 fw7 pa2 input-reset ba bg-white hover-bg-black hover-white w-100\" type=\"email\" name=\"email-address\"  id=\"email-address\" />\n              </div>\n              <div className=\"mv3\">\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\n                <input className=\"b fw7 bw1 pa2 input-reset ba bg-white hover-bg-black hover-white w-100\" type=\"password\" name=\"password\"  id=\"password\" />\n              </div>\n            </fieldset>\n            <div className=\"\">\n              <input className=\"b ph3 bw1 fw7 pv2 input-reset ba b--black bg-white  hover-white hover-bg-black pointer f6 dib\" type=\"submit\" value=\"Sign in\" \n              onClick={() => onRouteChange('home') } \n              />\n            </div>\n            <div className=\"lh-copy mt3\">\n              <p href=\"#0\" className=\"f6 fw6 pointer link dim black db\"\n                onClick={() => onRouteChange('register') } \n              >\n                Sign up\n              </p>\n            </div>\n          </div>\n        </main>\n      </article>\n    </div>\n  );\n}\n\nexport default Signin; \n\n\n","import React from 'react'\n\nconst Register = ({ onRouteChange }) => {\n  return (\n    <div>\n      <article className=\"br0 ba bw1 dark-gray b--black bg-white mv4 w-100 w-50-m w-25-l mw5 center\">\n        <main className=\"pa4 black-80\">\n          <div className=\"measure center\">\n            <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\n              <legend className=\"f4 fw6 ph0 mh0\">REGISTER</legend>\n              <div className=\"mt3\">\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">Name</label>\n                <input className=\"bw1 fw7 pa2 input-reset ba bg-white hover-bg-black hover-white w-100\" type=\"text\" name=\"name\"  id=\"name\" />\n              </div>\n              <div className=\"mv3\">\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\n                <input className=\"bw1 fw7 pa2 input-reset ba bg-white hover-bg-black hover-white w-100\" type=\"email\" name=\"email-address\"  id=\"email-address\" />\n              </div>\n              <div className=\"mv3\">\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\n                <input className=\"b fw7 bw1 pa2 input-reset ba bg-white hover-bg-black hover-white w-100\" type=\"password\" name=\"password\"  id=\"password\" />\n              </div>\n            </fieldset>\n            <div className=\"\">\n              <input className=\"b ph3 bw1 fw7 pv2 input-reset ba b--black bg-white  hover-white hover-bg-black pointer f6 dib\" type=\"submit\" value=\"Register\" \n              onClick={() => onRouteChange('home') } \n              />\n            </div>\n          </div>\n        </main>\n      </article>\n    </div>\n  );\n}\n\nexport default Register; \n\n\n","import React from 'react';\nimport Tilt from 'react-tilt';\nimport './Logo.css';\nimport skull from './logo.svg';\n\nconst Logo = () => {\n  return (\n    <div className=\"logo ma4 \">\n      <Tilt className=\"Tilt ba br-100 bw1\" options={{ max : 55 }} style={{ height: 150, width: 150 }} >\n        <div className=\"Tilt-inner f1\"> \n          <img className=\"skull\" alt=\"\" src={ skull } />\n        </div>\n      </Tilt>\n    </div>\n  );\n}\n\nexport default Logo;","import React from 'react'\n\nconst Rank = () => {\n  return (\n    <div>\n      <div className=\"f3\">\n        { 'User, your current rank is ...'}\n      </div>\n      <div className=\"f1\">\n        { '#1'}\n      </div>\n    </div>\n  );\n}\n\nexport default Rank;","\nconst ParticlesOptions = {\n  particles: {\n    number: {\n      value: 30,\n      density: {\n        enable: true,\n        value_area: 800\n      },\n    },\n    opacity: {\n      value: 1,\n      random: false,\n      anim: {\n        enable: false\n      }\n    }, \n    color: {\n      value: '#000000'\n    },  \n    size: {\n      value: 3,\n      random: true\n\n    },  \n    line_linked: {\n      enable: false,\n    }\n  }\n}\n\nexport default ParticlesOptions;","import React, { Component } from 'react';\nimport './App.css';\nimport Navigation from './components/navigation/Navigation';\nimport ImageLinkForm from './components/imageLinkForm/ImageLinkForm';\nimport FaceRecognition from './components/faceRecognition/FaceRecognition';\nimport Signin from './components/signin/Signin';\nimport Register from './components/register/Register';\nimport Logo from './components/logo/Logo';\nimport Rank from './components/rank/Rank';\nimport Particles from 'react-particles-js';\nimport ParticlesOptions from './components/particlesOptions/ParticlesOptions';\nimport Clarifai from 'clarifai';\n\nconst clarifyApp = new Clarifai.App({\n  apiKey: 'e0ec84a4e14e4387a9ab971694662a02'\n});\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {},\n      route: 'signin',\n      isSignedIn: false\n    }\n  }\n  componentDidMount() {\n    fetch('http://localhost:8000')\n    .then(response => response.json())\n    .then(console.log)\n  }\n  calculateFaceLocation = (data) => {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height= Number(image.height);\n\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow:  clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height)\n    }\n  }\n\n  displayFaceBox = (box) => {\n    this.setState({box: box }) \n  }\n\n  onInputChange = (e) => {\n     this.setState({ input: e.target.value})\n  }\n  \n  onButtonSubmit = () => {\n    this.setState({imageUrl: this.state.input })\n    clarifyApp.models\n    .predict(\n      Clarifai.FACE_DETECT_MODEL, {\n        url: this.state.input\n    })\n    .then( response => this.displayFaceBox( this.calculateFaceLocation(response)))\n    .catch(err => console.log(err));\n  }\n  onRouteChange = (route) => {\n    if (route === 'signout') {\n      this.setState({ isSignedIn: false }) \n    } else if (route === 'home') {\n      this.setState({ isSignedIn: true })\n    }\n    this.setState({ route: route })\n  }\n  render() {\n    const { isSignedIn, box, imageUrl, route } = this.state;\n    return (\n      <div className=\"App\">\n        <Particles \n          className=\"particles\"\n          params={ ParticlesOptions }\n        />\n        <header >\n          <Navigation isSignedIn={isSignedIn} onRouteChange={this.onRouteChange}  />\n          <Logo />\n        </header>\n        {/* This is an if else statement */}\n        { route === 'home' \n          ?  <div>\n            <Rank />\n            <ImageLinkForm  \n              onInputChange={ this.onInputChange } \n              onButtonSubmit={ this.onButtonSubmit } />\n            <FaceRecognition box={ box } imageUrl={ imageUrl } /> \n          </div>\n          : (\n            route ==='signin'\n            ?  <Signin onRouteChange={this.onRouteChange} />\n            :  <Register onRouteChange={this.onRouteChange} />\n          )\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}